package Lesson4;

import java.util.ArrayList;
import java.util.LinkedList;

/* 
üìå –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ–æ—Ä–∏—é –æ LinkedList, Queue, Dequeue, PriorityQueue, Stack;
üìå –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–≤—è–∑–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤ –∏ Stack;
üìå –Ω–∞—É—á–∏—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–π –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ —Å–≤—è–∑–Ω—ã—Ö
—Å–ø–∏—Å–∫–æ–≤. 
*/

public class CompareLists {

    public static void main(String[] args) {
        int size = 200_000;

        System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞: ");
        long start = System.currentTimeMillis();
        createArrayListAddLast(size);
        System.out.println(System.currentTimeMillis() - start);

        start = System.currentTimeMillis();
        createLinkedListAddLast(size);
        System.out.println(System.currentTimeMillis() - start);

        System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞: ");
        start = System.currentTimeMillis();
        createArrayListAddFirst(size);
        System.out.println(System.currentTimeMillis() - start);

        start = System.currentTimeMillis();
        createLinkedListAddFirst(size);
        System.out.println(System.currentTimeMillis() - start);

        System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–µ—Ä–µ–¥–∏–Ω—É —Å–ø–∏—Å–∫–∞: ");
        start = System.currentTimeMillis();
        createArrayListAddMiddle(size);
        System.out.println(System.currentTimeMillis() - start);

        start = System.currentTimeMillis();
        createLinkedListAddMiddle(size);
        System.out.println(System.currentTimeMillis() - start);

    }

    public static ArrayList<Integer> createArrayListAddLast(int size) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        for (int i = 0; i < size; i++) {
            arrayList.addLast(i);
        }
        return arrayList;
    }

    public static LinkedList<Integer> createLinkedListAddLast(int size) {
        LinkedList<Integer> linkedList = new LinkedList<>();
        for (int i = 0; i < size; i++) {
            linkedList.addLast(i);
        }
        return linkedList;
    }

    public static ArrayList<Integer> createArrayListAddFirst(int size) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        for (int i = 0; i < size; i++) {
            arrayList.addFirst(i);
        }
        return arrayList;
    }

    public static LinkedList<Integer> createLinkedListAddFirst(int size) {
        LinkedList<Integer> linkedList = new LinkedList<>();
        for (int i = 0; i < size; i++) {
            linkedList.addFirst(i);
        }
        return linkedList;
    }

    public static ArrayList<Integer> createArrayListAddMiddle(int size) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        for (int i = 0; i < size; i++) {
            arrayList.add(arrayList.size() / 2, i);
        }
        return arrayList;
    }

    public static LinkedList<Integer> createLinkedListAddMiddle(int size) {
        LinkedList<Integer> linkedList = new LinkedList<>();
        for (int i = 0; i < size; i++) {
            linkedList.add(linkedList.size() / 2, i);
        }
        return linkedList;
    }
}
